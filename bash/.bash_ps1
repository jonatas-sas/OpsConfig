# Cores ANSI
RESET='\[\e[0m\]'
WHITE='\[\e[97m\]'
ORANGE='\[\e[38;5;208m\]'
GREEN='\[\e[32m\]'
BLUE='\[\e[34m\]'
YELLOW='\[\e[33m\]'
MAGENTA='\[\e[35m\]'
CYAN='\[\e[36m\]'
GRAY='\[\e[90m\]'

# Ícones Nerd Font
ICON_SERVER="󰢹"
ICON_BRANCH=""
ICON_MODIFIED=""
ICON_UNTRACKED=""
ICON_DELETED=""
ICON_RENAMED="󰑕"
ICON_CONFLICT=""
ICON_AHEAD=""
ICON_VENV=""
ICON_ARROW_DOWN=""
ICON_PROMPT=""

# Atualiza o PS1 dinamicamente
__update_ps1_components() {
  local hostname path venv git

  # Hostname
  hostname="\[\e[34m\]${SERVER_NAME:-$(hostname)}\[\e[0m\]"

  # Path
  path="$PWD"
  [[ $path == "$HOME"* ]] && path="~${path#$HOME}"
  path="\[\e[33m\]${path}\[\e[0m\]"

  # Virtualenv
  if [[ -n $VIRTUAL_ENV ]]; then
    local name
    name=$(basename "$VIRTUAL_ENV")
    venv="\[\e[35m\]${ICON_VENV} ${name}\[\e[0m\]"
  else
    venv=""
  fi

  # Git
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    local branch status flags
    branch=$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --exact-match 2>/dev/null)
    status=$(git status --porcelain=2 --branch 2>/dev/null)

    flags=""
    grep -q "^? " <<<"$status" && flags+="${ICON_UNTRACKED}"
    grep -q "^ M" <<<"$status" && flags+="${ICON_MODIFIED}"
    grep -q "^A " <<<"$status" && flags+="${ICON_MODIFIED}"
    grep -q "^D " <<<"$status" && flags+="${ICON_DELETED}"
    grep -q "^R " <<<"$status" && flags+="${ICON_RENAMED}"
    grep -q "^UU" <<<"$status" && flags+="${ICON_CONFLICT}"
    grep -q "ahead " <<<"$status" && flags+="${ICON_AHEAD}"

    git="\[\e[32m\]${ICON_BRANCH} ${branch} ${flags}\[\e[0m\]"
  else
    git=""
  fi

  # Monta o PS1 final com tudo atualizado
  export PS1="\n${ORANGE}${ICON_SERVER} ${GREEN}\u@${hostname} ${venv} ${path} ${git}${GRAY} ${ICON_ARROW_DOWN}${RESET}\n${ORANGE}${ICON_PROMPT} ${RESET}"
}

# Atualiza PS1 a cada comando
PROMPT_COMMAND=__update_ps1_components
