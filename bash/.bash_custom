#!/usr/bin/env bash

#######################################################################################################################
## ENVIRONMENT VARIABLES
#######################################################################################################################
#######################################################################################################################
export VISUAL='nvim'
export EDITOR='nvim'
export GIT_EDITOR='nvim'

#######################################################################################################################
## ALIASES
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
## General
#######################################################################################################################
alias c='clear'
alias e='exit'
alias q='exit'

#######################################################################################################################
## Update & Upgrade
#######################################################################################################################
if [[ -n $ODARA_TYPE && $ODARA_TYPE == "servers" ]]; then
  echo_log() {
    echo -e "\033[1;34m[INFO]\033[0m $1"
  }

  update_system() {
    echo_log "Baixando e executando o script de instalação..."
    curl -fsSL https://raw.githubusercontent.com/OdaraIT/servers/main/install | bash

    echo_log "Removendo pacotes desnecessários..."
    sudo apt autoremove -y

    echo_log "Atualizando lista de pacotes..."
    sudo apt-get update -y

    echo_log "Atualizando pacotes instalados..."
    sudo apt-get upgrade -y

    echo_log "Atualizando distribuição do sistema..."
    sudo apt-get dist-upgrade -y

    echo_log "Verificando versão do PHP..."

    if [[ -f /root/.php ]]; then
      PHP_VERSION=$(cat /root/.php | tr -d ' ')

      if [[ -n $PHP_VERSION ]]; then
        PHP_BIN="/usr/bin/$PHP_VERSION"

        if [[ -x $PHP_BIN ]]; then
          echo_log "Atualizando link simbólico para PHP ($PHP_VERSION)..."

          sudo ln -sfn "$PHP_BIN" /etc/alternatives/php

          php -v
        else
          echo_log "Erro: O binário $PHP_BIN não existe ou não é executável."
        fi
      else
        echo_log "Erro: Nenhuma versão válida encontrada no arquivo /root/.php."
      fi
    else
      echo_log "Arquivo /root/.php não encontrado, nenhuma ação necessária para PHP."
    fi

    if [[ -f "${HOME}/.bashrc" ]]; then
      source "${HOME}/.bashrc"
    fi

    echo_log "Atualização concluída com sucesso!"
  }

  alias update="curl -fsSL https://raw.githubusercontent.com/OdaraIT/servers/main/install | bash"
  alias updagrade="update_system"
  alias u="update_system"
fi

#######################################################################################################################
## FileSystem
#######################################################################################################################
alias ..='cd ..'
alias ...='cd ../..'
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias l='ls -AGlhSr --color=always'
alias ls='ls -AGlhSr --color=always'
alias ll='ls -AGlhSr --color=always'
alias lt='ls --human-readable --size -1 -S --classify'

#######################################################################################################################
## VIM
#######################################################################################################################
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias neovim='nvim'
alias nano='nvim'

#######################################################################################################################
## Python
#######################################################################################################################
if [[ -n ${ODARA_PYTHON_LIB_PATH} ]]; then
  if [[ -f "${ODARA_PYTHON_LIB_PATH}/bin/activate" ]]; then
    source "${ODARA_PYTHON_LIB_PATH}/bin/activate"
  fi
fi

#######################################################################################################################
## Link & Unlink
#######################################################################################################################
alias unlink-all='find . -type l -exec unlink {} \;'
alias sunlink-all='sudo find . -type l -exec unlink {} \;'

#######################################################################################################################
## Software
#######################################################################################################################
alias reload='RELOAD=1 source ~/.bashrc'
alias refresh-keys='sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com'

#######################################################################################################################
## PROJECT CONFIG FILE
#######################################################################################################################
#######################################################################################################################
if [ -f .projectrc ]; then
  source .projectrc
fi

last_dir="${PWD}"

function check_dir_change() {
  if [[ ${PWD} != "${last_dir}" ]]; then
    last_dir="${PWD}"

    if [[ -f .projectrc ]]; then
      source .projectrc
    fi
  fi
}

#######################################################################################################################
## SOFTWARE CONFIGURATIONS
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
## NVM
#######################################################################################################################
export NVM_DIR="${HOME}/.nvm"
[ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"                   # This loads nvm
[ -s "${NVM_DIR}/bash_completion" ] && \. "${NVM_DIR}/bash_completion" # This loads nvm bash_completion

#######################################################################################################################
## HomeBrew
#######################################################################################################################
if command -v /home/linuxbrew/.linuxbrew/bin/brew &>/dev/null; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

#######################################################################################################################
## FZF
#######################################################################################################################
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

#######################################################################################################################
## PS1
#######################################################################################################################
#######################################################################################################################
source "${HOME}/.bash_ps1"
